# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
    
    app.menu_builder:
        public: true
        class: AppBundle\Menu\MenuBuilder
        arguments: ["@service_container","@knp_menu.factory"]
        tags:
            - { name: knp_menu.menu_builder, method: createMainMenu, alias: main } # The alias is what is used to retrieve the menu
            
    controller_check_permission:
        public: true
        class: AppBundle\EventListener\CheckPermissionListener
        tags:
            - { name: kernel.event_listener, event: kernel.controller, method: onKernelController}
        arguments: ["@annotation_reader","@service_container"]
        
    my.twig.extension:
        public: true
        class: AppBundle\Extensions\Twig\PermissionHelper
        tags:
           - { name: twig.extension }
        arguments: ["@service_container"]

    app.jwt_manager:
        public: true
        class: AppBundle\Services\JWTManager
        arguments: ["@service_container"]